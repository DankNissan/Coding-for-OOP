# tile.py

class Tile:
    def __init__(self):
        self.activated = False
        self.surrounding = None
        self.flagged = False
        self.mine = False

    def setFlag(self, x):
        """
        sets flag status
        :param x: bool
        :return: none
        """
        self.flagged = x

    def setState(self, x):
        """
        sets activation state
        :param x: bool
        :return: none
        """
        self.activated = x

    def isActivated(self):
        return self.activated

    def isFlagged(self):
        return self.flagged

    def setMine(self, x):
        """
        sets mine status
        :param x: bool
        :return: none
        """
        self.mine = x

    def hasMine(self):
        return self.mine

    def setSurrounding(self, x):
        """
        sets amount of surrounding mines
        :param x: int
        :return: none
        """
        self.surrounding = x

    def getSurrounding(self):
        return self.surrounding

class TileVisual(Tile):
    def __init__(self, x, y, win):
        self.x = x; self.y = y
        self.xmin = x - .5; self.ymin = y - .5
        self.xmax = x + .5; self.ymax = y + .5
        self.win = win
        self.label = Text(Point(self.x, self.y), "")
        self.fill = None

    def makeLabel(self):
        if self.activated and self.mine:
            self.label = Text(Point(self.x, self.y), "Mine")
        elif self.activated:
            self.label = Text(Point(self.x, self.y), str(self.surrounding))
        elif self.flagged:
            self.label = Text(Point(self.x, self.y), "Flag")
        else:
            self.label = Text(Point(self.x, self.y), "")

    def fillColor(self):
        if self.activated and self.mine:
            self.fill = self.rect.setFill("red1")
        elif self.activated:
            self.fill = self.rect.setFill("grey2")
        elif self.flagged:
            self.fill = self.rect.setFill("grey1")
        else:
            self.fill = self.rect.setFill("grey1")

    def draw(self):
        self.rect = Rectangle(Point(self.xmin, self.ymin), Point(self.xmax, self.ymax))
        self.update()
        self.rect.draw(self.win)

    def update(self):
        self.makeLabel(); self.fillColor()
