# tile.py
from graphics import *


class Tile:
    def __init__(self):
        self.activated = False
        self.surrounding = None
        self.flagged = False
        self.mine = False

    def setFlag(self, x):
        """
        sets flag status
        :param x: bool
        :return: none
        """
        self.flagged = x

    def setState(self, x):
        """
        sets activation state
        :param x: bool
        :return: none
        """
        self.activated = x

    def isActivated(self):
        return self.activated

    def isFlagged(self):
        return self.flagged

    def setMine(self, x):
        """
        sets mine status
        :param x: bool
        :return: none
        """
        self.mine = x

    def hasMine(self):
        return self.mine

    def setSurrounding(self, x):
        """
        sets amount of surrounding mines
        :param x: int
        :return: none
        """
        self.surrounding = x

    def getSurrounding(self):
        return self.surrounding


class TileVisual(Tile):
    def __init__(self):
        Tile.__init__(self)

    def makeLabel(self):
        if self.activated and self.mine:
            self.label.setText("Mine")
        elif self.activated:
            self.label.setText(self.surrounding)
        elif self.flagged:
            self.label.setText("Flag")
        else:
            self.label.setText("")

    def fillColor(self):
        if self.activated and self.mine:
            self.rect.setFill("#ff0000")
        elif self.activated:
            self.rect.setFill("#9b9b9b")
        elif self.flagged:
            self.rect.setFill("#ededed")
        else:
            self.rect.setFill("#ededed")

    def draw(self, x, y, win):
        self.rect = Rectangle(Point(x, y), Point(x + 1, y + 1))
        self.label = Text(Point(x + .5, y + .5), "")
        self.rect.draw(win); self.label.draw(win)
        self.update()

    def update(self):
        self.makeLabel(); self.fillColor()
