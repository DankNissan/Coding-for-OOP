# tile.py
from graphics import *


class Tile:
    def __init__(self):
        self.activated = False
        self.surrounding = None
        self.flagged = False
        self.mine = False

    def setFlag(self, x):
        """
        sets flag status
        :param x: bool
        :return: none
        """
        self.flagged = x

    def setState(self, x):
        """
        sets activation state
        :param x: bool
        :return: none
        """
        self.activated = x

    def isActivated(self):
        return self.activated

    def isFlagged(self):
        return self.flagged

    def setMine(self, x):
        """
        sets mine status
        :param x: bool
        :return: none
        """
        self.mine = x

    def hasMine(self):
        return self.mine

    def setSurrounding(self, x):
        """
        sets amount of surrounding mines
        :param x: int
        :return: none
        """
        self.surrounding = x

    def getSurrounding(self):
        return self.surrounding


class TileVisual(Tile):
    def __init__(self):
        self.img = None
        self.file = 'resources/inactive.gif'
        self.labeltext = ""
        Tile.__init__(self)

    def drawTile(self, x, y, win):
        self.win = win
        self.img = Image(Point(x, y), self.file)
        self.label = Text(Point(x, y), self.labeltext)
        self.img.draw(self.win); self.label.draw(self.win)

    def update(self):
        if self.activated and self.mine:
            self.file = 'resources/mine.gif'
            self.labeltext = ""
        elif self.activated:
            self.file = 'resources/active.gif'
            if self.surrounding:
                self.labeltext = self.surrounding
            else:
                self.labeltext = ""
        elif self.flagged:
            self.file = 'resources/flagged.gif'
            self.labeltext = ""
        else:
            self.file = 'resources/inactive.gif'
            self.labeltext = ""

#        try:
        self.drawTile(self.img.getAnchor().getX(), self.img.getAnchor().getY(), self.win)
#        except:
#            pass
#        self.img.undraw(); self.label.undraw()
#        self.drawTile(self.img.getAnchor().getX(), self.img.getAnchor().getY(), self.win)
